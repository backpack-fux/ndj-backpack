diff --git a/node_modules/@types/react-native-snap-carousel/index.d.ts b/node_modules/@types/react-native-snap-carousel/index.d.ts
index b7f19b8..8666f84 100755
--- a/node_modules/@types/react-native-snap-carousel/index.d.ts
+++ b/node_modules/@types/react-native-snap-carousel/index.d.ts
@@ -14,16 +14,11 @@ import {
     Animated,
     LayoutChangeEvent,
     NativeSyntheticEvent,
-    NativeScrollEvent,
-    StyleProp,
-    ScrollViewProps,
-    ViewStyle,
-    ImageProps,
-    FlatListProps
+    NativeScrollEvent
 } from 'react-native';
 
 export interface AdditionalParallaxProps {
-    carouselRef?: React.Component<FlatListProps<any>> | undefined;
+    carouselRef?: React.Component<any> | undefined;
     itemHeight?: number | undefined;
     itemWidth?: number | undefined;
     scrollPosition?: Animated.Value | undefined;
@@ -198,11 +193,11 @@ export interface CarouselProps<T> {
     /**
      * Optional styles for Scrollview's global wrapper
      */
-    containerCustomStyle?: StyleProp<ViewStyle> | undefined;
+    containerCustomStyle?: any | undefined;
     /**
      * Optional styles for Scrollview's items container
      */
-    contentContainerCustomStyle?: StyleProp<ViewStyle> | undefined;
+    contentContainerCustomStyle?: any | undefined;
     /**
      * Value of the opacity effect applied to inactive slides
      */
@@ -235,11 +230,11 @@ export interface CarouselProps<T> {
     /**
      * Used to define custom interpolations
      */
-    slideInterpolatedStyle?(index: number, animatedValue: Animated.AnimatedValue, carouselProps: CarouselProps<any>): StyleProp<ViewStyle>;
+    slideInterpolatedStyle?(index: number, animatedValue: Animated.AnimatedValue, carouselProps: CarouselProps<any>): any;
     /**
      * Optional style for each item's container (the one whose scale and opacity are animated)
      */
-    slideStyle?: StyleProp<ViewStyle> | undefined;
+    slideStyle?: any | undefined;
 
     // Callbacks
     /**
@@ -263,13 +258,13 @@ export interface CarouselProps<T> {
     onBeforeSnapToItem?(slideIndex: number): void;
 }
 
-export type CarouselProperties<T> = ScrollViewProps & FlatListProps<T> & CarouselProps<T>;
+export type CarouselProperties<T> = CarouselProps<T>;
 
-export interface ParallaxImageProps extends ImageProps, AdditionalParallaxProps {
+export interface ParallaxImageProps extends AdditionalParallaxProps {
     /**
      * Optional style for image's container
      */
-    containerStyle?: StyleProp<ViewStyle> | undefined;
+    containerStyle?: any | undefined;
     /**
      * On screen dimensions of the image
      */
@@ -330,11 +325,11 @@ export interface PaginationProps {
      * Reference to the Carousel component to which pagination is linked.
      * Needed only when setting tappableDots to true
      */
-    carouselRef?: React.Component<FlatListProps<any>> | undefined;
+    carouselRef?: React.Component<any> | undefined;
     /**
      * Style for dots' container that will be merged with the default one
      */
-    containerStyle?: StyleProp<ViewStyle> | undefined;
+    containerStyle?: any | undefined;
     /**
      * Delay in ms, from the start of the touch, before onPressIn is called on dot
      */
@@ -349,7 +344,7 @@ export interface PaginationProps {
      * Style of each dot's container.
      * Use this if you need to specify styles that wouldn't have any effect when defined with dotStyle (such as flex)
      */
-    dotContainerStyle?: StyleProp<ViewStyle> | undefined;
+    dotContainerStyle?: any | undefined;
     /**
      * Optional custom active dot element that will replace the default one.
      * The element will receive a prop active set to true as well as a prop index
@@ -358,7 +353,7 @@ export interface PaginationProps {
     /**
      * Dots' style that will be merged with the default one
      */
-    dotStyle?: StyleProp<ViewStyle> | undefined;
+    dotStyle?: any | undefined;
     /**
      * Background color of the inactive dots.
      * Use this if you want to animate the change between active and inactive colors, and always in conjunction with dotColor
@@ -380,7 +375,7 @@ export interface PaginationProps {
     /**
      * Dots' style that will be applied to inactive elements
      */
-    inactiveDotStyle?: StyleProp<ViewStyle> | undefined;
+    inactiveDotStyle?: any | undefined;
     /**
      * Function that gives you complete control over pagination's rendering.
      * It will receive three parameters : (activeIndex, total, context).
